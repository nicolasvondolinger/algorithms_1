//                                                                                            ##.
//                                                             (##/.                       *##%(,
//                                                            (#%%#/                    ,(#%%%%(#,                       ,,.
//                                                           ##%%&%#(                  (%%&&%#(#,                     *###
//                            (%##/                        .(#%%%&%#((               ((%%%&&%%#((,                 ,(#%%%##*
//                            (##%%%##.                   ,##%%%&&&%#(%.          ,##%%&&&&&%#(((,              (#%&&&%%#(#*
//                             ##%%%%##                ##%%&&&&&&%((,        /##%%&&&&&&%%#((((        .,#%&&&&&%%#(((,
//                             /#(#%%%%%%%##,           ./##%&&&&&&&%#(#/.    ,(#%%%&&&&&&&%%#((((/.   ,(##%&&&&&&%%%#((#.
//                              ,(###%%%%%%%%#/.       *##%%&&&&&&&&%((#(,./##%%%&&&&&&&&&%%#((#((//###%&&&&&&&&&%%#(((#.                 ,/**(#,
//                              ,((##%%%%%%%%%%#((*    /###%%&&&&&&&&&##((((#%%%%&&&&&&&&&&%#(((((###%%&&&&&&&&&&%##((((          *((//(##%%%%%##,
//                              *(/###%%%&&&&&&&%##(/#./###%&&&&&&&&&&%###%%#%&&&&&&&&&&&&%%#####%%&&&&&&&&&&&&%##(((((.(##(((##%%&%%%%%%%%##((
//                              ,((((##%%&&&&&&&&&%#((//(#%%&&&&&&&&&&&&%###%%&&&&&&&&&&&&&%%##%%%&&&&&&&&&&&&%%##((((((###%%%%%%%%&&&&&%%#((((
//    .((,,,                     .((#(#%%&&&&&&&&&&&%#(((#%&&&&&&&&&&&&&&%%%%&&&&&&&&&&&&&&&%%%&&&&&&&&&&&&&&%%##((((###%%%%%%%%%&&&&&%%#(((#/
//     .##%%%%(////             ,(/#(##%%%&&&&&&&&&&%%##%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%#(###%%%%%%%%%&&&&&&&%%#((((#
//       ,(((#%%%%%%%%#((/       ,#/(((#%%%&&&&&&&&&&&&%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%#%%%%%%%%&&&&&&&&&&%%#(((((#,
//         #(((###%%%%%%%%%%###,  .(((((#%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%##((((((,
//          ((((((##%%%%%%%%%%%%%#(/((###%%&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%##(((((#(.
//            *((((((##%%%%%%%%%%%%%%%%%%%%&&&&&&&&@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%##((((((#/
//             .((((((##%%%%%%&&&%&&&&&&&&&&&&&&&&&@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%#((((((#(,       ///////////*,
//               ,(#((((((#%%%&&&&&&&&&&&&&&&&&&&&&&&@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&&&%%###########%%%%%%%%%%%###(((((((((
//                .(((((((((#%%&&&&&&&&&&&&&@&&&&&&&&&@@&&@&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%%%&&&&&&&%%%%%%%%%%%#((((((((#*
//                  (((((((((##%%&&&&&&&&&&&&@@@&&&&&&&@@&&@@&&&&&&@@&&&&&@&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%&&&&&&&&&&&&&&&%%%%%%##((((((((/.
// *,,,,,,,,,/####///(((#####%%&&&&&&&&&&&&&@@@&&&&&&@@&&&&@@&&&&&&&&&@@@@&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%%##((((((((((
//      ,(/((((((##%%%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%##((//((((((((,
//         /(((((((((##%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&-&&&&&&&&&&%%&&&&&&%%%#%&&&%%%%%%%&&&&%%%&&&&&&&&%%%###(((////(((((,.
//           ,((((((((((##%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%&&&&&%%##%&&%%%%%%%%&&%%##%&&&&&&&&&&&%%%%%%####(((((((//(((,,*.
//               ,(((######%%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%&&&%%%###%%%%#%%%%%&%%##%%&&&&&&&&&&&&&&&%%%%%%%%%%%%%####(((((((/*//
//           /((##%##%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%&&&%%####%%####%%%%%#(#%%&&%&&&&&&%%&&&&&&%%##################((((((((((((#(
//       ,#(#%%#%%%%%%%%%%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%%%&&%%##########%%%%#((####((((#%&&&&%##%%&&&&%##((////////((((((((((((((((#/
//  ../##%##############%%%%%%%%%%%&&&&&&&&&%%%%%%%%%%%%%%%&&&&&&&&&&&&&&&&&&&&&&&&&&&&%%#%%%%%##(####((##%%##(((((((((((((#%&&%#((##%&&&%%#(/((((((((((((((/*//
// ##((((((((((((((((###%%%%%%&%%%&&&&&&%#((((#############%%%%&&&&&&&&&&&&&&&&&&&&%%%%%######((/////////////****//(((#%%%#((((#%%%%%#(/(((((((,
//   ........./##(/(#%%%%%%&&%%#%%&&&&%#(((((###(((((######((####((((//**,,,,,,,,,..,................................   .,/((#%#(((((((##%%#(/...
//             ,(#%%%%%%%%%#(((#%&&&%(((((###((//*,,,,,................,,,,,******///////////////////,.      .((###//##((((####(#.
//           /(#%%%%%%##((((((#%&&%#((/..........,,,,*//((#%%%&&@@@@&&&&&%%%%############################((//##(///(/ ......./((#(, ./((((((##(#,
//        ,((#%%%###(((((((((/#%&%(((.  .  ,/######%%%&&@@@@@@@@&&&@&&&&%%%##############((((################((((//((((....... ./((    .(((((#(#
//      ,((####(((((((((((((,#&%#(.....,/%(//((((#%&&@@@@@@@&&@@@&&&%%%###((////((##/,.,*(#############((##((((((((/. ......  ,//. ....,/((((((,
//    ,((((((((((((((#(((...#%#/,.....,/%#((////(((#%&@@@@@@@@&&@@&&&%%%#/,//////.,/((((####((######((##((((((((/............,,....../((##((#
//   (%*       #####(//....##/,......,(%((/////((#%&&&@@@@@@@&&@@&&&&%/,(#(((((((((##((((((((((((#####((((#(((((//((,. ................,/(##
//            /#%##(/#%#/,...,(........,(%((/////(((#%&&@@@@@@@&&@@&&&(,/%#((.,///,(##(((((((((#####((((#(((///(//...................,..(#
//           /#####(%##(/,............  ./#/*///(((#%&&@@@@@@@@@@@@&/,,#%((,,#%(/,.((,/##((((((((######(((#((((((((/...................,,
//          (##/.,####/*,............. ./#//(///(((#%&&@@@@@@@&@@@&/,,#%((/,,/,,((/,*(#((((((((######(((#(((((((//. ..... ....       ,,
//         ##%*  ,##,   .,.............../#(/////((#(#%&@@@@@@@@&@@%,%%,#%((((///((((,/##((((((((#####((((#((((((((/...................,,
//                      .,...............#(/////(#(#%&&@@@@@@@@&%//&%%%(,,(#((((((/,,/##(((((((((######(((#(((///((,. ................  */
//                      ................(#/////((###%&&@@@@@@@@&%((///**,,,,*/(##((((((((((((###(#((((#((*/((//.  .......        ...,/(#
//                      /.............. .#/////(####%&@@@@@@@@@@@&&&%%%%####(((((((((((((((((((((//((##((((#((((((.     .     ..... ..*(##((,
//                    ,*, ...............((((((#%%##%&@@@@@@@@@@@@&&&%%%########(##((((((((((///(((///*,,,,.........       ...,/((##/*/(#.
//                   (#%%#(,......,............,,,,,,,,,***,*,,,,,,,,,,..............................     .....,,*////##//#(,((((.
//                   ((((/##//(#/,///////////**,.,///,,,*****///*///////(//##(*,,.. ..,/(##%%%%%%###((/*/((//,/(((((#.
//                    ##((/#//((/(######(#(((/,,,....../(##(/((#######(/(#######((#####((##(///,   ..,,.. ./(/. (%%%%%%##(/////,,(#####.
//                    /%%%#(/(//((##%%%%%%%#,.,//,..,....   .(##########(#%%%%%%%%#(/////*/((.   /%#...,,..(&%#.(%&%%%%##((/,/,,///(##%#
//                    /%%%#//*////(##%%%%%%&(./%&%/ ,(#...,,.   ,(//*///(%%%%%%%%%%%##(//##%(,,( .,,.   .//#@@%%%&&%%%#(((//((,/(//##%#.
//                    /%%#(*/(///(##%%%%%%&%,(&@%,..,.   ,,,.,,,#%%%(/(%%%%%%%%%%%%%%%%%%%&%/%&% .,*,,//(&@@&%%%%%%%##(((((##/,///(###
//                    /%%#/((//((##%%%%%%%&%#&@&(.,*,,/#&@@@%(%&&&%%%%%%%%%%%%%%%%%%%%%%&&%&&@@&.,***,.(&@@&#%%%%%%%#((((((/,/(/(###/
//                     #(,/((//(#/(##%%%%%%%%%&&&@@%,.,//,.%@@@&%&%%%%%%%%%%%%%%%%%%%%%%%%%%%%&&@@@@&#((#%@@@@%##%%%%%%%##((((,//(###(
//                     ./#/,/(/*/(((##%%%%%%%%%%#(#@@&%#(((#%@@@&&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###############%%%%%%%%%###((/*/(#(/(#/.
//                       ##////*,/###%%%%%%%%%%%##((((#######%%%%%&%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%###((//(((#%#
//                        .#####(/*,./##%%%%%%%%%%%%%%%%%%%%%%%%%%%%&%%%%%%%%%%%%%%%%%%%%%%%%%%%&&&%%&%%%%%%%%##((###%%%%%%##(((/,/(##%%#.
//                          ((##((#(*,(#%%%%%%%%%%%%#%%%&%%%%%%%&&&&%%%%%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&&&%%%%%%%%%%%%%#(((((((((,/(#####
//                           *(#%%%#(,,(#%%%%%####%%&&&&&&&&&&&&&&&&&&%%%%%%%%%%%%%%%%%%%%%%%%&&&&&&&&&&&&&%%%%%%%%%%%%%%##(//(///(((((
//                             ##%##(,(###(#%%%%&&&&&&&&&&&&&&&&&&&&%%%%%%%%%%%%%%%%%%%%%&&&&&&&&&&&&&&&&&%%%%%%%%%%%%%##(((/(@@@@&&%%%%(*,
//                               #(/////(%%%%%%%&&&%##%%%&&&&&&&&&%%%%&&&&&&&&&&&%%%%%%%%%&&&&&&&&&&&&&&&&&&&&%%%%#((####(((%&%%&@@@&&&&%%(
//                                  ##&&(/(%%%%%&%((%&&&&&&&&&&&&&&&&&%&&&&&&&&&&&&&%%%%%%%&&&&&&&&&&&&&&&&&&&&&&&%%%%%#//(#(//%#&&%%%%%%&&&%%#/(%,
//                              %&@@@&&%((%%%((%&&&&&&&&%&&&&&&&&&&&&&&&%%%%%%%%%%#######%%%%%&&&&&&&&&&&&&&%%%%%%%%##((/*(##(#%%%%%%%%%%%%%%##,
//                            /#%&&&&%####/,//(%%%%%%&&&%%%&&&&&&&&&&&&&&&%%%(//*//,**/((#%%%%&&&&&&&&&&&%%%%%%#(####(((////##((##%%%%%%%%%######/.
//                       .//#%&&@&&&&%%#(//*(%%%%%%%##%%&&&&&&&&&&&&&&&&&%%%#(/*/*/((##%%%%%%%%%%%%%%%%%&&%%%%%#//((#/////#(/(###(#%%%%%%%%####(#/
//                       ,%&@@@@@@&&%((//////(/#%%%((%&&&&&&&&&&&&&&&&&&&&&%%%%#########%%%%%%%%%&&&&&#/(#%%%%%%%##((////(((//((((%%%%%%%%%%%###((/
//                    (###&@@@@&%%###((/////(#//((/%&&&&&&&&&&%%%&&&&&&&&&&&(////////////(%&&&&&&&&&&&&%%%%%%%%#((((((/(///((*///(#%%%%%%%%%%###(((
//                   (#&@@@@@@@&&%%#((///////((((#%%%&&&&&%&&&&&&&%/////////////////////////////%%%&&&&&&%##((((//#/(((//((*////((#%%%%%%#####((/
//                  ,(#&@@@@@@@&&%#((//////////,//(###%%%%%%%%%%&%%%%%%%%%%%%%%%%%%##########%%%%%%%%%%###((#(/((/(/((((/*/((/(%%&&&%%%%#####(/
//                  #&&&&&@@@@@@&%%#(//////////////(*/(##%%%%%%%%%%%%%%%%%%%##############%%%%%%%%%%###((((/...,(#%((((//(/*/(//((#%%%%%%%%###((/
//                  ##%&@@@@@@&%%%%%(/////////((//(#(/*/(##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##(((((,,,,.,,,,//((///(*////##%%%##%%%%##((((/
//                  #%&@@@&&&@@@@@@&&#((/////*/((//(#///(/,,,/(##%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##(((((/,,*,,*,,..((//(/*///(#%%%&%%##%%##((((/
//                  #%&&&%&@@@@@@&&%%%##(/////((///((,,,../(/,,/((###%%%%%%%%%%%%%%%%%####((((/,,**/*///..,//*//*/#&&&&&%#%%######(((((#
//                  #(##%&@@@@&&@@@@@@&%(//*//((,,/,.,*(##(//,,,//(((###########((((((/,,,**////////(/,../**//(#%&&&&&%%####(###(((((#
//                   /(#%&@&&%&@@@@@@%%###(/////(/..,/(//#%%###((/,,,,*/////////*,,,,,,,*//*//(((((((((/..,////(%%%%%%%%%%%%####((##((((((
//                   ((#%&&%%&@@@@@&&&@@@@&#(///*/((. ,/(##(%%%%%%###((/*,,*,,,,,,,,,*////*//(((#(#(####(.,/(#%@@@@&&&%%%%%######(##(((((/
//                   ((#%&%%%&&@@&&&@@@@@&%%%%%#(//##/, ./(#%%((#%%%%%%%%%####(((/*****/*/((/((((###########(/%&&%##%&@@&&&%%%%######((#(((((/#.
//                   ./#%&%%%%&&&%%&@@@&%%&@@@&&%#(((,,,/#%%%%(#%%%%%%%%%%%%%%%%%######((#########((/(((########%&&&%%&@@@@&&%%%&&&&%%%%######((((((((/,(*
//                 ,/,#%%%##%&%%%%&&&&%%%&@@@&%%##%&&%#(//((((%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%####((/((#####%##%&@@@@@@%%&@@@&%%%%&&%%%%%%#####((((((((/.,,*.
//             ,//,...#&%###%%%%%%&&%%%%&&@@&%#%&@@@&%##&&&%#(/(##((/(((((((((((////(%%((((((((((((((/%&&&@@@&&&@@@&&%%&&&&%%%%%%%%##%%#####(((((///..,,,,*(//,
//           *,......#&%##%%%###%&%%##%&&&&%##%&@&&%#%&@@&%#((%&%#//#############(////(#############/#&@&&@@&&&&@&&%##%&&&%%%%%%%%##%######(((((///......,/%(/,,
//       ,#..........,(%###%%%###%%%%##%&&&%##%%&&%%#%&&&&&%##&@@&%/##############(//,/(############(((%@&%&@@&&&&&&%%#%&&&%%%%%%%%#########((((//. ......,(/,,//,*(
//    ./,.............(##%%%####%%%###%%%%###%%%%%##%%&&&%%#%&@@&#(##############(,/(############(((&@&%&&&&%%&&%%##%&&&%%%%%%%%######((#((///,  .....,..,,*///,(,
//   /,................,(#%%%###%%%####%%%%###%%%%###%%&&%%##%&@&%((#############((,//(###########((((&@&%%&&%%%%%%%##%%&&&%%%%%%%######((##(/,. ........,...,,,/(//*.
// /,...................,#&&%###%%%####%%%%###%%%####%%%%%###%&&&#((#############((//,/((###########((*(%&&%%&&%%%%%%%##%%&&&%%%%%%%######(((#(/.  ..........,,...,,,,//((,
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
// /,,*,,*,,,,,,#%&%###%%%####%%%%###%%%####%%%%%%##%%&%#(###############(////(#############(/#%&%%%%%%%%%%%%%#%%&&%%%##%%%#######((((,,,,,,,,,,,,*,**/(((#
    
    #include <bits/stdc++.h>
    using namespace std;
     
    #define _ ios_base::sync_with_stdio(0);cin.tie(0);
    #define endl '\n'
    #define ff first
    #define ss second
    #define pb push_back
     
    typedef long long ll;
     
    const int INF = 0x3f3f3f3f;
    const ll LINF = 0x3f3f3f3f3f3f3f3fll;

    vector<ll> auxCombination, finalCombination;
    vector<vector<ll>> memo;

    class maneuver{
        public:
            ll pontuation;
            ll time;
    };

    class section{
        public:
            ll bonus;
            ll time;
    };        

    ll countSetBits(ll n){
        ll count = 0;
        while(n){
            count += n & 1;
            n >>= 1;
        }
        return count;
    }

    ll calculeTimeUsed(ll mask, vector<maneuver>& maneuvers){
        ll total = 0, position = 0;
        while(mask){
            if(mask & 1){
                total += maneuvers[position].time;
            }
            mask >>= 1; position++;
        }
        return total;
    }

    void calculeCombination(vector<vector<ll>>& maneuverCombination, vector<maneuver>& maneuvers, vector<section>& track){
        for(int i = 0; i < maneuverCombination.size(); i++){
            maneuverCombination[i][0] = 0;
            for(int j = 1; j < maneuverCombination[i].size(); j++){
                ll count = 0, a = i, b = j, sum = 0, mult = 0;
                while(b){
                    if(b & 1){
                        if(a & 1) sum += maneuvers[count].pontuation/2;
                        else sum += maneuvers[count].pontuation;
                        mult++;
                    }
                    count++;
                    a>>=1; b>>=1;
                }
                maneuverCombination[i][j] = sum * mult;
            }
        }
    }
    
    ll dp(vector<vector<ll>>& maneuverCombination, vector<section>& track, vector<maneuver>& maneuvers, ll prevMask, ll currentSection, ll currentValue){
        if(currentSection == track.size()) return 0; // Certo
        
        for(int i = 0; i < maneuverCombination.size(); i++){ // Certo
            if(calculeTimeUsed(i, maneuvers) > track[currentSection].time) continue; // Certo
            ll& prev = memo[currentSection][i]; // Certo
            if(prev != -1) return prev; // Certo
            
        }

    }

    void print(vector<vector<ll>>& v){
        for(int i = 0; i < v.size(); i++){
            for(int j = 0; j < v[i].size(); j++){
                cout << v[i][j] << " ";
            }   
            cout << endl;
        }
    }

    void printCombination(){
        for(int i = 0; i < finalCombination.size(); i++){
            //ll aux = countSetBits(finalCombination[i]), count = 0;
            cout << countSetBits(finalCombination[i]) << " ";
            ll aux = finalCombination[i], count = 0;
            while(aux){
                if(aux & 1) cout << count + 1 << " ";
                aux >>= 1;
                count++;
            }
            cout << endl;
        }
    }

    void solve(){

        ll n, k, maxTime = 0; cin >> n >> k;
        vector<section> track(n);
        for(ll i = 0; i < n; i++){
            cin >> track[i].bonus >> track[i].time;
            maxTime = max(maxTime, track[i].time);
        }

        vector<maneuver> maneuvers;
        for(ll i = 0; i < k; i++){
            maneuver m; cin >> m.pontuation >> m.time;
            if(m.pontuation >= 0 && m.time <= maxTime) maneuvers.pb(m);
        }

        vector<vector<ll>> maneuverCombination(1 << maneuvers.size(), vector<ll>(1 << maneuvers.size()));

        auxCombination.resize(n, 0), finalCombination.resize(n, 0);        
        memo.resize(n, vector<ll>(1 << maneuvers.size(), -1));

        calculeCombination(maneuverCombination, maneuvers, track);            

        print(memo);
        cout << dp(maneuverCombination, track, maneuvers, 0, 0, 0) << endl;
        //printCombination();
    }
     
    int main(){ 
        int t = 1;
        while(t--) solve();
        exit(0);
    }